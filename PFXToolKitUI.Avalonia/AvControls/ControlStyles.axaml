<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PFXToolKitUI.Avalonia.AvControls"
                    xmlns:c="clr-namespace:PFXToolKitUI.Avalonia.Converters"
                    xmlns:attached="clr-namespace:PFXToolKitUI.Avalonia.Themes.Attached">
    <ControlTheme x:Key="{x:Type local:IconButton}" TargetType="{x:Type local:IconButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{DynamicResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <ControlTemplate TargetType="{x:Type local:IconButton}">
                <Border x:Name="PART_Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        TextElement.Foreground="{TemplateBinding Foreground}">
                    <Grid x:Name="PART_Grid" RowDefinitions="*,0,*" ColumnDefinitions="*,0,*">
                        <local:IconControl Grid.Row="0" Grid.Column="0" x:Name="PART_IconControl"
                                           Icon="{TemplateBinding Icon}"
                                           Stretch="{TemplateBinding Stretch}"
                                           IsVisible="{TemplateBinding Icon, Converter={x:Static c:NullToBoolConverter.NullToFalse}}"
                                           Margin="{TemplateBinding IconPadding}"/>
                        <ContentPresenter Grid.Row="0" Grid.Column="0" x:Name="PART_ContentPresenter"
                                          Margin="{TemplateBinding ContentPadding}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          IsVisible="{TemplateBinding Content, Converter={x:Static c:NullToBoolConverter.NullToFalse}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </Border>
            </ControlTemplate>
        </Setter>
        <Style Selector="^:pointerover /template/ Border#PART_Border">
            <Setter Property="Background" Value="{DynamicResource Button.MouseOver.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Button.MouseOver.Border}"/>
        </Style>
        <Style Selector="^:pressed /template/ Border#PART_Border">
            <Setter Property="Background" Value="{DynamicResource Button.Pressed.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Button.Pressed.Border}"/>
        </Style>
        <Style Selector="^:disabled[(attached|DisabledButtonExtras.IgnoreDisabledBackground)=False] /template/ Border#PART_Border">
            <Setter Property="Background" Value="{DynamicResource Button.Disabled.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Button.Disabled.Border}"/>
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type local:IconToggleButton}" TargetType="{x:Type local:IconToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Background" Value="{DynamicResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <ControlTemplate>
                <Border x:Name="PART_Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        TextElement.Foreground="{TemplateBinding Foreground}">
                    <StackPanel Spacing="3"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <local:IconControl x:Name="PART_IconControl" Icon="{TemplateBinding Icon}" Stretch="{TemplateBinding Stretch}"
                                           IsVisible="{TemplateBinding Icon, Converter={x:Static c:NullToBoolConverter.NullToFalse}}"
                                           VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                        <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                          IsVisible="{TemplateBinding Content, Converter={x:Static c:NullToBoolConverter.NullToFalse}}"
                                          VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </StackPanel>
                </Border>
            </ControlTemplate>
        </Setter>
        <Style Selector="^[IsDefault=True] /template/ Border#PART_Border">
            <Setter Property="BorderBrush" Value="{DynamicResource Button.Defaulted.Border}"/>
        </Style>
        <Style Selector="^:pointerover /template/ Border#PART_Border">
            <Setter Property="Background" Value="{DynamicResource Button.MouseOver.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Button.MouseOver.Border}"/>
        </Style>
        <Style Selector="^:pressed /template/ Border#PART_Border">
            <Setter Property="Background" Value="{DynamicResource Button.Pressed.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Button.Pressed.Border}"/>
        </Style>
        <Style Selector="^:disabled[(attached|DisabledButtonExtras.IgnoreDisabledBackground)=False] /template/ Border#PART_Border">
            <Setter Property="Background" Value="{DynamicResource Button.Disabled.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Button.Disabled.Border}"/>
        </Style>
        <Style Selector="^:checked /template/ Border#PART_Border">
            <Setter Property="Background" Value="{DynamicResource ToggleButton.IsChecked.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ToggleButton.IsChecked.Border}"/>
        </Style>
        <Style Selector="^:checked:pointerover /template/ Border#PART_Border">
            <Setter Property="Background" Value="{DynamicResource ToggleButton.MouseOver.IsChecked.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ToggleButton.MouseOver.IsChecked.Border}"/>
        </Style>
        <Style Selector="^[IsChecked=True][IsPressed=true] /template/ Border#PART_Border">
            <Setter Property="Background" Value="{DynamicResource ToggleButton.Pressed.IsChecked.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ToggleButton.Pressed.IsChecked.Border}"/>
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type local:ShortcutLabel}" TargetType="{x:Type local:ShortcutLabel}">
        <Setter Property="Background" Value="{DynamicResource ABrush.Tone3.Background.Static}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ABrush.Tone7.Border.Static}"/>
        <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Template">
            <ControlTemplate>
                <Border x:Name="PART_Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        TextElement.Foreground="{TemplateBinding Foreground}">
                    <TextBlock x:Name="PART_Text"/>
                </Border>
            </ControlTemplate>
        </Setter>
    </ControlTheme>
</ResourceDictionary>